<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="INFO" monitorInterval="30">
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="%d{MM-dd HH:mm:ss.SSS} %5p [%t] -%m%n"/>
        </console>
        <RollingFile name="RollingFile" fileName="./logs/account/fsdpl_account.log"
                     filePattern="./logs/account/%d{yyyy-MM-dd}/fsdpl_account_%d{yyyy-MM-dd-HH}.log">
            <PatternLayout pattern="%d{MM-dd HH:mm:ss.SSS} %5p [%t] -%m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <!--<TimeBasedTriggeringPolicy interval="1" modulate="true" /> -->
                <SizeBasedTriggeringPolicy size="1024 MB"/>
            </Policies>
        </RollingFile>
        <!-- 性能日志输出 -->
        <RollingFile name="PerformanceRollingFile" fileName="./logs/account/fsdpl_account_performance.log"
                     filePattern="./logs/account/%d{yyyy-MM-dd}/fsdpl_account_performance_%d{yyyy-MM-dd-HH}.log">
            <PatternLayout pattern="%d{MM-dd HH:mm:ss.SSS} %5p [%t] -%m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <!--<TimeBasedTriggeringPolicy interval="1" modulate="true" /> -->
                <SizeBasedTriggeringPolicy size="1024 MB"/>
            </Policies>
        </RollingFile>
        <!--以下可修改项 kafka中topic值和bootstrap.servers地址-->
        <!--全链路日志-->
        <KafkaExtend name="kafkaTraceLogger" topic="apm">
            <PatternLayout pattern="%msg" charset="UTF-8"/>
            <Property name="bootstrap.servers">bootstrap.servers</Property>
            <Property name="client.id">producer-account-0</Property>
        </KafkaExtend>
        <Async name="AsyncKafkaTraceLogger">
            <AppenderRef ref="kafkaTraceLogger" />
        </Async>
        <!--业务日志-->
        <KafkaExtend name="kafkaBizLogger" topic="business.topic">
            <PatternLayout pattern="%hslog" charset="UTF-8"/>
            <Property name="bootstrap.servers">bootstrap.servers</Property>
            <Property name="client.id">producer-account-1</Property>
        </KafkaExtend>
        <Async name="AsyncKafkaBizLogger">
            <AppenderRef ref="kafkaBizLogger" />
        </Async>
    </appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <logger name="com.hundsun.jrescloud.rpc.def.trace" level="INFO">
            <appender-ref ref="AsyncKafkaTraceLogger"/>
        </logger>
        <logger name="system" level="INFO" additivity="false">
            <appender-ref ref="RollingFile"/>
        </logger>
        <logger name="performance" level="debug" additivity="false">
            <appender-ref ref="PerformanceRollingFile"/>
        </logger>
        <root level="info">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFile"/>
        </root>
    </loggers>
</configuration>